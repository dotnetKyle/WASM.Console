@page "/"

@inject WASM.Console.BrowserConsole console

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            await console.LogAsync("A log message");
            await console.LogAsync("A log message");
            await console.LogAsync("A log message");
            await console.LogAsync("A log message");
            await console.LogAsync("A log message");
            
            await console.ClearAsync();

            await console.TimeAsync("timer1");

            await console.LogAsync("A log message");
            await console.LogAsync("Another log message");
            
            using(await console.GroupAsync())
            {
                await console.LogAsync("A log message");
                await console.LogAsync("Another log message");
            }

            await console.LogAsync("A log message");
            await console.GroupCollapsedAsync("With Label");
            await console.LogAsync("A log message");
            await console.DebugAsync("A debug message");
            await console.LogAsync("A log message");
            await console.GroupEndAsync("With Label");
            await console.LogAsync("A log message");
            
            // output a trace
            await console.TraceAsync();

            using(await console.GroupAsync("Grouped Messages"))
            {
                await console.LogAsync("A log message");
                await console.InfoAsync("An info message");
                await console.WarnAsync("A warning message");
                await console.ErrorAsync("An error message");
            }

            await console.TimeEndAsync("timer1");

            await console.DirAsync(new { Prop1 = "test1", Prop2 = "test2" });

            await console.TableAsync(
                new TestObject[]
                {
                    new TestObject{ Test1 = "test1a", Test2 = "test1b" },
                    new TestObject{ Test1 = "test2a", Test2 = "test2b" },
                    new TestObject{ Test1 = "test3a", Test2 = "test3b" },
                    new TestObject{ Test1 = "test3a", Test2 = "test3b" },
                    new TestObject{ Test1 = "test4a", Test2 = "test4b" }
                }
            );
        }

        await base.OnAfterRenderAsync(firstRender);
    }
}
